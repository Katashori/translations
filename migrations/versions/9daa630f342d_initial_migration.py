"""Initial migration.

Revision ID: 9daa630f342d
Revises: 
Create Date: 2025-03-19 00:27:06.959895

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9daa630f342d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(), nullable=True, comment='Название роли'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('titles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title_name', sa.String(), nullable=True, comment='Название тайтла'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title_name')
    )
    op.create_table('chapters',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=True),
    sa.Column('chapter_number', sa.Integer(), nullable=True, comment='Номер главы'),
    sa.ForeignKeyConstraint(['title_id'], ['titles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chapters_id'), 'chapters', ['id'], unique=False)
    op.create_table('workers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('nickname', sa.String(), nullable=True, comment='Никнейм в Discord'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nickname')
    )
    op.create_table('chapter_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.Column('chapter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapters.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['workers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chapter_assignments_id'), 'chapter_assignments', ['id'], unique=False)
    op.create_table('title_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.Column('title_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['title_id'], ['titles.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['workers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_title_assignments_id'), 'title_assignments', ['id'], unique=False)
    
    # Insert initial roles
    op.bulk_insert(sa.table('roles', 
                            sa.Column('role_name', sa.String()),
                           ),
                    [
                        {'role_name': 'переводчик'},
                        {'role_name': 'редактор'},
                        {'role_name': 'клинер'},
                        {'role_name': 'тайпер'},
                        {'role_name': 'бета-ридер'}
                    ])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_title_assignments_id'), table_name='title_assignments')
    op.drop_table('title_assignments')
    op.drop_index(op.f('ix_chapter_assignments_id'), table_name='chapter_assignments')
    op.drop_table('chapter_assignments')
    op.drop_table('workers')
    op.drop_index(op.f('ix_chapters_id'), table_name='chapters')
    op.drop_table('chapters')
    op.drop_table('titles')
    op.drop_table('roles')
    # ### end Alembic commands ###
